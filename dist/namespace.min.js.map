{"version":3,"file":"namespace.min.js","sources":["../src/namespace.ts"],"sourcesContent":["type NamespacePath = string | Array<string>;\n\n/** Namespace class */\nexport default class Namespace {\n  constructor(path?: NamespacePath) {\n    if (!(this instanceof Namespace))\n      return new Namespace(path);\n    this.init(path);\n  }\n\n  protected init(path: NamespacePath | undefined) {\n    if (this.isValidPath(path)) {\n      const pathArr = this.parsePath(path as string | Array<string>);\n      const childName = pathArr.shift();\n      if (this.isValidKey(childName)) {\n        this.appendChildren(pathArr, childName as string);\n      }\n    }\n  }\n\n  private isValidPath(path: NamespacePath | undefined) {\n    return typeof path === 'string' || (Array.isArray(path) && path.length > 0);\n  }\n\n  private parsePath(path: NamespacePath): string[] {\n    return Array.isArray(path) ? path : path.split(this.getSplitter()).filter(x => this.filterName(x))\n  }\n\n  protected getSplitter() {\n    return /[\\[\\].\"']/gi;\n  }\n\n  protected filterName(name: string) {\n    return !!name && !!name.trim();\n  }\n\n  protected isValidKey(name: string | undefined): boolean {\n    return typeof name === 'string';\n  }\n\n  protected getNamespaceClass() {\n    return this instanceof Namespace ? this.constructor as typeof Namespace : Namespace;\n  }\n\n  protected take(path: NamespacePath) {\n    const isValidPath = this.isValidPath(path);\n    let context: any = this;\n    let errContext: any = undefined;\n    let exists = true;\n    let parts: string[] = [];\n    let part: string | undefined;\n\n    if (isValidPath) {\n      parts = this.parsePath(path);\n      while (parts.length > 0) {\n        part = parts.shift();\n        if (part && context[part]) {\n          context = context[part];\n        } else {\n          exists = false;\n          errContext = part ? context[part] : undefined;\n          break;\n        }\n      }\n    }\n\n    return {\n      last: context,\n      lastName: part,\n      errLast: errContext,\n      left: parts,\n      exists,\n      isValidPath\n    }\n  }\n\n  protected appendChildren(path: NamespacePath | undefined, propName: string) {\n    const nsc = this.getNamespaceClass();\n    const ns = new nsc(path);\n    ns.applyTo(this, propName as string);\n    return ns;\n  }\n\n  public applyTo(context: any, name: string): void {\n    if (!this.isValidKey(name))\n      throw new Error(`name of context is ${'' + name}`);\n    context[name] = this;\n  }\n\n  public exists(path: NamespacePath): boolean {\n    const res = this.take(path);\n    return res.exists;\n  }\n\n  public goto(path: NamespacePath): any {\n    const res = this.take(path);\n    if (res.exists) {\n      return res.last;\n    }\n    return res.errLast;\n  }\n\n  public namespace(path: NamespacePath): Namespace {\n    const res = this.take(path);\n    if (!res.exists) {\n      const last = this.appendChildren.call(res.last, res.left.slice(), res.lastName as string);\n      return last.goto(res.left) as Namespace;\n    }\n    return res.last;\n  }\n}"],"names":["path","this","Namespace","init","isValidPath","pathArr","parsePath","childName","shift","isValidKey","appendChildren","Array","isArray","length","split","getSplitter","filter","x","_this","filterName","name","trim","constructor","part","context","errContext","undefined","exists","parts","last","lastName","errLast","left","propName","ns","getNamespaceClass","applyTo","Error","take","res","call","slice","goto"],"mappings":";;;;;;2BAIE,WAAYA,GACV,KAAMC,gBAAgBC,GACpB,OAAO,IAAIA,EAAUF,GACvBC,KAAKE,KAAKH,IAuGd,OApGYE,iBAAV,SAAeF,GACb,GAAIC,KAAKG,YAAYJ,GAAO,CAC1B,IAAMK,EAAUJ,KAAKK,UAAUN,GACzBO,EAAYF,EAAQG,QACtBP,KAAKQ,WAAWF,IAClBN,KAAKS,eAAeL,EAASE,MAK3BL,wBAAR,SAAoBF,GAClB,OAAuB,iBAATA,GAAsBW,MAAMC,QAAQZ,IAASA,EAAKa,OAAS,GAGnEX,sBAAR,SAAkBF,GAAlB,WACE,OAAOW,MAAMC,QAAQZ,GAAQA,EAAOA,EAAKc,MAAMb,KAAKc,eAAeC,QAAO,SAAAC,GAAK,OAAAC,EAAKC,WAAWF,OAGvFf,wBAAV,WACE,OAAO,eAGCA,uBAAV,SAAqBkB,GACnB,SAASA,KAAUA,EAAKC,QAGhBnB,uBAAV,SAAqBkB,GACnB,OAAuB,iBAATA,GAGNlB,8BAAV,WACE,OAAOD,gBAAgBC,EAAYD,KAAKqB,YAAkCpB,GAGlEA,iBAAV,SAAeF,GACb,IAKIuB,EALEnB,EAAcH,KAAKG,YAAYJ,GACjCwB,EAAevB,KACfwB,OAAkBC,EAClBC,GAAS,EACTC,EAAkB,GAGtB,GAAIxB,EAEF,IADAwB,EAAQ3B,KAAKK,UAAUN,GAChB4B,EAAMf,OAAS,GAAG,CAEvB,KADAU,EAAOK,EAAMpB,WACDgB,EAAQD,GAEb,CACLI,GAAS,EACTF,EAAaF,EAAOC,EAAQD,QAAQG,EACpC,MAJAF,EAAUA,EAAQD,IASxB,OAAO,CACLM,KAAML,EACNM,SAAUP,EACVQ,QAASN,EACTO,KAAMJ,EACND,SACAvB,gBAIMF,2BAAV,SAAyBF,EAAiCiC,GACxD,IACMC,EAAK,IADCjC,KAAKkC,qBACEnC,GAEnB,OADAkC,EAAGE,QAAQnC,KAAMgC,GACVC,GAGFhC,oBAAP,SAAesB,EAAcJ,GAC3B,IAAKnB,KAAKQ,WAAWW,GACnB,MAAM,IAAIiB,MAAM,sBAA2BjB,GAC7CI,EAAQJ,GAAQnB,OAGXC,mBAAP,SAAcF,GAEZ,OADYC,KAAKqC,KAAKtC,GACX2B,QAGNzB,iBAAP,SAAYF,GACV,IAAMuC,EAAMtC,KAAKqC,KAAKtC,GACtB,OAAIuC,EAAIZ,OACCY,EAAIV,KAENU,EAAIR,SAGN7B,sBAAP,SAAiBF,GACf,IAAMuC,EAAMtC,KAAKqC,KAAKtC,GACtB,OAAKuC,EAAIZ,OAIFY,EAAIV,KAHI5B,KAAKS,eAAe8B,KAAKD,EAAIV,KAAMU,EAAIP,KAAKS,QAASF,EAAIT,UAC1DY,KAAKH,EAAIP;;;;;;;;"}